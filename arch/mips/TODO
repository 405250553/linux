 - Kernel:
   - fd_set_dma_addr()    Virtuelle Adressen -> Bus adressen
   - __pa() und __va() Makro Benutzer in include/asm-mips/ aendern
   - The PICs in some RISC PC class machines are cascaded, in others not.
     Yuck.  If they're using PC crap part they should do it right ...
   - Print a warning for R4600 V1.0 users; there is a problem with the
     caches that isn't handled yet in the kernel.
   - IP checksums overhaul.  (Dave said he did for the SGI port)
   - The networking related constants still aren't indentical with IRIX/ABI.
   - Check the definitions for F_EXLCK and F_SHLCK in include/asm-mips/fcntl.h
     for correctness and compatibility with MIPS ABI.
   - Check the definitions for O_NDELAY in include/asm-mips/fcntl.h for
     correctness and compatibility with MIPS ABI.
   - What are the fields l_sysid and pad in struct flock supposed to contain?
     Do we need to handle them in the kernel?
   - Check the resource limits defines in asm-mips/resource.h
   - Recheck struct stat in asm-mips/stat.h
   - Use timestruc_t in struct stat in asm/stat.h instead of time_t
   - asm-mips/termios.h is pretty hacked; it should be verified for ABI
     conformance by someone who has the documentation.
   - Cleanup include files.  To many files include too many others.
   - Fix asm-mips/elf.h.  This is just good enough to make the thing compile.
   - asm-mips/socket.h needs further fixes for ABI conformance.
   - linux/types.h / asm-mips/types.h: FD_SETSIZE should be 1024, not 256.
     1024 is required by the ABI.
   - asm-mips/socket.h: check the FIO* and SIO* defines.
   - linux/sockios.h: The sockios aren't ABI compatible.
   - For performance reasons the missing inline functions in asm-mips/string.h
     should be implemented.
   - For performance reasons the tlbflush code should be rewritten.
   - Module support for the Sonic driver.
   - From 1.3.17 on the kernel does no more compile with network support but
     without procfs support included.
   - /proc/cpuinfo should contain more information that just CPU model,
     computer model and damn BogoMIPS.
   - The sysmips(2) syscall needs to be tested.  Some of the subcommands
     are still missing.
   - The whole kernel is junked with #if 0 ... #endif debug code.  Cleanup.
   - Use set_pte hook in page.h.  It's the more effective and elegant way
     than my solution which was just optimized just to better survives other
     peoples kernel patches without rejects ...
   - Build the machine vector in arch/mips/kernel/setup.c table using
     constructors, not static initialization.
   - Can the virtual address spaces of the kernel virtual memory and page
     tables colide with each other?  (Yes, when the kernel uses excessive
     amounts of kernel virtual memory.)
   - Test the memory protection with nuclear warheads model W-crashme ...
   - die_if_kernel() should try to handle branch delay slots.
   - Try to reduce dependencies between header files.
   - Unroll some of the memset type assembler loops.
   - Replace memcpy and friends by a highly optimized routine.  Will probably
     speed up scrolling by another 100 %.  Certainly not required by the Acer,
     but Magnum and Olivetti ...
   - Hmm...  Think that the i386 version of the kernel has a bug.  It doesn't
     set the carry flag for syscalls > NR_syscalls.  Really unimportant.
   - The size_t definitions in <linux/stddef.h> and <asm/types.h> are
     incompatible.
   - Cleanup the parameter passing to new execve-ed ELF/a.out executables.
   - Cleanup drivers/char/keyboard.c and send it to Linus.
   - No SMP support yet.
   - Caches:
     - sys_cacheflush should check for illegal flags
     - The way cache flushing is being done in floppy.c is dangerous because
       the flushing is actually a writeback invalidate.  Could corrupt data.
     - The kernel is very conservative about flushing the TLB/caches.  Try
       to eleminate flushing as far as possible.
     - page colouring NEEDS to be implemented for R4000+ to circument the
       page aliasing problem due to the stupid R4000 cache.  There are
       alternatives but they'd be dog slow.
   - Allocate the swapper pgd dynamically.
   - it is impossible to send signals >= 32 (send_sig() in kernel/exit.c)
   - Which is the unit of RLIMIT_CPU?
   - Eleminate invalid_pte_table.  It contains only zeros just like
     empty_zero_page.
   - Writing to floppies doesn't work in 1.3.62.
   - Cleanup the arch/mips/ directory structure.  Split up kernel/ and mm/
     in cpu dependand and machine dependand directories.  Do this also for
     the configfile.
   - FIXME: resume() assumes current == prev.
   - The timer interrupt runs with interrupts disabled.  This means that
     sometimes interrupts are off for a long time.  Use some other strategy
     for the jiffies stuff.
   - Scrollback in the VGA console is broken.
   - Modify pte_alloc() the same way as for Intel.
 - Binutils 2.7:
   - 2.6 introduces a new machine instruction waiti for the 4010.  Is this
     the same machine instruction as wait for R4200/R4300i/R4600?  At least
     the opcodes are the sames.
   - strip --remove-section= with no other options also removes the symbols.
   - Shouldn't the binutils support an ulwu macro?
   - uld, ulw generate bad code for the special case when both registers are
     the same.
   - MIPS support in gprof is missing.
   - When explicitly giving an nonexistant entry point as -e <entry> point
     during loading a shared lib, ld should complain.
   - The assembler dies when the argument to .gpword is a extern symbol.
   - This source breaks GAS in binutils 2.7:
          .macro  ins
          .if     (3 | 16)
          .endif
          .endm
  
          ins
 - GNU libc 951215:
   - There are lots of collisions between structures in the kernel header
     files and the includes generated by the kernel.
   - setjmp & friends fail for the 32 double register model of > MIPS3.
 - R4400:
   - Per once told me he found something he believes is a CPU bug.  Ask him if
     it's really a bug.
 - R8000 in arch/mips/config.in:
   - Can the R8000 do a TLB shutdown like the R4000 or is it like the R10000?
 - Manpages:
   - The sysmips(2) documentation needs to be completed.
   - The cacheflush(2) and cachectl(2) documentation needs to be proof read
     by a native speaker.
   - Translate the manpages into as many foreign languages as possible.
   - Send the corrected/translated manpages to the LDP/Andries Brouwer.
 - GCC 2.7.2:
   - The info files lack descriptions of some MIPS options like -mips4.
   - The multilib support has no way to specify incompatible options
     like -mabicalls and -fno-PIC.  For such option pairs library compilation
     is nonsense and breaks anyway.
   - The following macros work but generate good code only for certain
     data types.  We only use get_unaligned() for accessing unaligned ints
     and then GCC makes full score anyway ...

#define get_unaligned(ptr)                                              \
	({                                                              \
		struct __unal {                                         \
			__typeof__(*(ptr)) __x __attribute__((packed)); \
		};                                                      \
                                                                        \
		((struct __unal *)(ptr))->__x;                          \
	})

#define put_unaligned(ptr,val)                                          \
	({                                                              \
		struct __unal {                                         \
			__typeof__(*(ptr)) __x __attribute__((packed)); \
		};                                                      \
                                                                        \
		((struct __unal *)(ptr))->__x = (val);                  \
	})

int
foo(int *p)
{
	return get_unaligned(p);
}

int
bar(int *p, int var)
{
	put_unaligned(p, var);
}

struct blah {
	char x1 __attribute__((packed));
	int x2 __attribute__((packed));
};

fasel(struct blah *p, int var)
{
	p->x2 = var;
}
